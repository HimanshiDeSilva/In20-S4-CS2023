#include <iostream>
#include <vector>
using namespace std;


void heapify(vector<int>& arr, int n, int i) {
    int maximum = i;  
    int left_node = 2 * i + 1; 
    int right_node = 2 * i + 2; 

    
    if (left_node < n && arr[left_node] > arr[maximum])
        maximum = left_node;
    if (right_node < n && arr[right_node] > arr[maximum])
        maximum = right_node;
    if (maximum != i) {
        swap(arr[i], arr[maximum]);
        heapify(arr, n, maximum);
    }
}

void heapSort(vector<int>& arr) {
    int n = arr.size();
    for (int i = n / 2 - 1; i >= 0; i--)
        heapify(arr, n, i);

    for (int i = n - 1; i >= 0; i--) {
        swap(arr[0], arr[i]);
        heapify(arr, i, 0);
    }
}

int main() {
    vector<int> arr = {1,12,9,5,6,10};

    cout << "Input array: ";
    for (int i = 0; i < arr.size(); i++)
        cout << arr[i] << " ";
    cout << endl;

    heapSort(arr);

    cout << "Sorted array: ";
    for (int i = 0; i < arr.size(); i++)
        cout << arr[i] << " ";
    cout << endl;
    return 0;
}
